# Generated by Django 3.0.2 on 2020-01-07 23:22

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('nodanews', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AnalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('academic', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AnalPerspective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=47)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(default='', max_length=200)),
                ('date_posted', models.DateField()),
                ('head_image', models.ImageField(default='', upload_to='media/nodes')),
                ('summary', models.TextField()),
                ('text1', models.TextField()),
                ('second_image', models.ImageField(default='', upload_to='media/nodes')),
                ('text2', models.TextField()),
                ('pop_out_quote', models.TextField()),
                ('video_embed1', models.CharField(blank=True, default='', max_length=500)),
                ('video_embed2', models.CharField(blank=True, default='', max_length=500)),
                ('video_embed3', models.CharField(blank=True, default='', max_length=500)),
                ('slug', models.SlugField(default=' ', max_length=200)),
            ],
            options={
                'ordering': ('-date_posted',),
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(default='', max_length=200)),
                ('date_posted', models.DateField(auto_now_add=True)),
                ('text', models.TextField()),
                ('slug', models.SlugField(default=' ', max_length=200)),
            ],
            options={
                'ordering': ('-date_posted',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(default=' ', max_length=150)),
                ('lead', models.TextField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('body', models.TextField()),
                ('image', models.ImageField(default='', upload_to='media/stock')),
                ('credit', models.CharField(default='', max_length=200)),
                ('videoQ', models.BooleanField(default=False)),
                ('video', models.CharField(blank=True, default='', max_length=500)),
                ('slug', models.SlugField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('image', models.ImageField(blank=True, default='', upload_to='media/temp')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Feature_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('posted', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Feature')),
            ],
            options={
                'ordering': ('-posted',),
            },
        ),
        migrations.CreateModel(
            name='Journalist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('contact', models.CharField(default='', max_length=200)),
                ('bio', models.TextField(default='bio goes here')),
                ('picture', models.ImageField(default=' ', upload_to='media/logos')),
                ('slug', models.SlugField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Media_Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Media_Org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('home_page', models.CharField(default='', max_length=200)),
                ('country', models.CharField(default='', max_length=100)),
                ('date_founded', models.DateField(default='1956-02-27')),
                ('logo', models.ImageField(upload_to='media/logos')),
                ('description', models.TextField()),
                ('ready', models.BooleanField(default=False)),
                ('slug', models.SlugField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(default='', max_length=200)),
                ('country', models.CharField(default='', max_length=100)),
                ('date_posted', models.DateField(auto_now_add=True)),
                ('lead', models.TextField(default='')),
                ('head_image', models.ImageField(default='', upload_to='media/nodes')),
                ('credit1', models.CharField(default='', max_length=200)),
                ('my_take', models.TextField()),
                ('video_embed1', models.CharField(blank=True, default='', max_length=500)),
                ('my_take2', models.TextField(default='')),
                ('video_embed2', models.CharField(blank=True, default='', max_length=500)),
                ('foot_image', models.ImageField(default='', upload_to='media/nodes')),
                ('credit2', models.CharField(default='', max_length=200)),
                ('video_embed3', models.CharField(blank=True, default='', max_length=500)),
                ('slug', models.SlugField(default=' ', max_length=200)),
            ],
            options={
                'ordering': ('-date_posted',),
            },
        ),
        migrations.CreateModel(
            name='Node_Dir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(default=' ')),
                ('banner', models.ImageField(blank=True, default='', upload_to='media/nodes')),
                ('slug', models.SlugField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Perspective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=47)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Node')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Political_Lean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PoliticalBiasNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(default='', max_length=300)),
                ('title', models.CharField(default='', max_length=150)),
                ('posted', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('conservative', models.BooleanField(default=False)),
                ('liberal', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('-posted',),
            },
        ),
        migrations.CreateModel(
            name='PoliticalIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(default='description goes here')),
                ('head_image', models.ImageField(default='', upload_to='media/nodes')),
                ('slug', models.SlugField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('color', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Report_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('posted', models.DateTimeField(auto_now=True)),
                ('imageQ', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, default='', upload_to='media/temp')),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Event')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org')),
            ],
            options={
                'ordering': ('-posted',),
            },
        ),
        migrations.CreateModel(
            name='STF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(max_length=200)),
                ('image', models.ImageField(default='', upload_to='media/nodes')),
                ('credit', models.CharField(default='', max_length=200)),
                ('update', models.TextField()),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('videoQ', models.BooleanField(default=False)),
                ('video', models.CharField(blank=True, default='', max_length=500)),
                ('slug', models.SlugField(default=' ', max_length=200)),
            ],
            options={
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='STF_Hub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('banner', models.ImageField(upload_to='media/nodes')),
                ('credit', models.CharField(default='', max_length=200)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, default='')),
                ('slug', models.SlugField(default=' ', max_length=200)),
                ('node_dir', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nodanews.Node_Dir')),
            ],
        ),
        migrations.CreateModel(
            name='STF_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.STF')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=' ', max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Topic_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', max_length=300)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('posted', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('journalist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='nodanews.Journalist')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org')),
                ('node_dir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Node_Dir')),
                ('region', models.ForeignKey(default=8, null=True, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Region')),
            ],
        ),
        migrations.DeleteModel(
            name='Post',
        ),
        migrations.AddField(
            model_name='stf',
            name='hub',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nodanews.STF_Hub'),
        ),
        migrations.AddField(
            model_name='stf',
            name='node_dir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nodanews.Node_Dir'),
        ),
        migrations.AddField(
            model_name='politicalbiasnews',
            name='issue',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='nodanews.PoliticalIssue'),
        ),
        migrations.AddField(
            model_name='politicalbiasnews',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org'),
        ),
        migrations.AddField(
            model_name='politicalbiasnews',
            name='region',
            field=models.ForeignKey(default=9, null=True, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Region'),
        ),
        migrations.AddField(
            model_name='node_dir',
            name='region',
            field=models.ForeignKey(default=8, null=True, on_delete=django.db.models.deletion.PROTECT, to='nodanews.Region'),
        ),
        migrations.AddField(
            model_name='node',
            name='node_direc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nodanews.Node_Dir'),
        ),
        migrations.AddField(
            model_name='node',
            name='region',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='nodanews.Region'),
        ),
        migrations.AddField(
            model_name='link',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org'),
        ),
        migrations.AddField(
            model_name='link',
            name='perspective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Perspective'),
        ),
        migrations.AddField(
            model_name='journalist',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nodanews.Media_Org'),
        ),
        migrations.AddField(
            model_name='feature_link',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org'),
        ),
        migrations.AddField(
            model_name='event',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Theme'),
        ),
        migrations.AddField(
            model_name='blog',
            name='event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Event'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='node_direc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Node_Dir'),
        ),
        migrations.AddField(
            model_name='analperspective',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.Analysis'),
        ),
        migrations.AddField(
            model_name='anallink',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Journalist'),
        ),
        migrations.AddField(
            model_name='anallink',
            name='media',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nodanews.Media_Org'),
        ),
        migrations.AddField(
            model_name='anallink',
            name='perspective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodanews.AnalPerspective'),
        ),
    ]
